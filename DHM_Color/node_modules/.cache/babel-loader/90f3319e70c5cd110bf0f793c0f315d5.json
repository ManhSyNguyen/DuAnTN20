{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Du_an20\\\\DuAnTN20\\\\DHM_Color\\\\src\\\\pages\\\\views\\\\Main\\\\CartControl\\\\index.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport apiRequest from '../../../../api/productApi';\nexport const DataContext = createContext();\nexport const DataProvider = props => {\n  const [products, setProducts] = useState({});\n  useEffect(() => {\n    const getProduct = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data); // console.log(data)\n      } catch (error) {\n        console.log('Faile to request API', error);\n      }\n    };\n\n    getProduct();\n  }, {});\n  const [carts, setCart] = useState([]);\n\n  const addCart = id => {\n    const check = carts.every(item => {\n      return item.id !== id;\n    });\n\n    if (check) {\n      const data = products.filter(product => {\n        return product.id === id;\n      });\n      console.log(data);\n      setCart([...cart, ...data]);\n    } else {\n      alert(\"The product has been added to cart.\");\n    }\n  };\n\n  useEffect(() => {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n    if (dataCart) setCart(dataCart);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('dataCart', JSON.stringify(cart));\n  }, [carts]);\n  const value = {\n    products: [products, setProducts],\n    cart: [carts, setCart],\n    addCart: addCart\n  };\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Du_an20/DuAnTN20/DHM_Color/src/pages/views/Main/CartControl/index.js"],"names":["React","createContext","useEffect","useState","apiRequest","DataContext","DataProvider","props","products","setProducts","getProduct","data","getAll","error","console","log","carts","setCart","addCart","id","check","every","item","filter","product","cart","alert","dataCart","JSON","parse","localStorage","getItem","setItem","stringify","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,UAAU,GAAG,YAAY;AAC3B,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMP,UAAU,CAACQ,MAAX,EAAvB;AACAH,QAAAA,WAAW,CAACE,IAAD,CAAX,CAFA,CAGA;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACH;AACJ,KARD;;AASAH,IAAAA,UAAU;AAEb,GAZQ,EAYN,EAZM,CAAT;AAaA,QAAM,CAACM,KAAD,EAAQC,OAAR,IAAmBd,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMe,OAAO,GAAIC,EAAD,IAAQ;AACpB,UAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAN,CAAYC,IAAI,IAAI;AAC9B,aAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACH,KAFa,CAAd;;AAGA,QAAIC,KAAJ,EAAW;AACP,YAAMT,IAAI,GAAGH,QAAQ,CAACe,MAAT,CAAgBC,OAAO,IAAI;AACpC,eAAOA,OAAO,CAACL,EAAR,KAAeA,EAAtB;AACH,OAFY,CAAb;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAM,MAAAA,OAAO,CAAC,CAAC,GAAGQ,IAAJ,EAAU,GAAGd,IAAb,CAAD,CAAP;AACH,KAND,MAMO;AACHe,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AAEJ,GAdD;;AAgBAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACA,QAAIJ,QAAJ,EAAcV,OAAO,CAACU,QAAD,CAAP;AACjB,GAHQ,EAGN,EAHM,CAAT;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,SAAL,CAAeR,IAAf,CAAjC;AACH,GAFQ,EAEN,CAACT,KAAD,CAFM,CAAT;AAKA,QAAMkB,KAAK,GAAG;AACV1B,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADA;AAEVgB,IAAAA,IAAI,EAAE,CAACT,KAAD,EAAQC,OAAR,CAFI;AAGVC,IAAAA,OAAO,EAAEA;AAHC,GAAd;AAOA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEgB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3B,KAAK,CAAC4B,QADX,CADJ;AAKH,CAtDM","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\nimport apiRequest from '../../../../api/productApi';\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n    const [products, setProducts] = useState({});\r\n    useEffect(() => {\r\n        const getProduct = async () => {\r\n            try {\r\n                const { data } = await apiRequest.getAll();\r\n                setProducts(data)\r\n                // console.log(data)\r\n            } catch (error) {\r\n                console.log('Faile to request API', error)\r\n            }\r\n        }\r\n        getProduct()\r\n\r\n    }, {})\r\n    const [carts, setCart] = useState([]);\r\n    const addCart = (id) => {\r\n        const check = carts.every(item => {\r\n            return item.id !== id\r\n        })\r\n        if (check) {\r\n            const data = products.filter(product => {\r\n                return product.id === id\r\n            })\r\n            console.log(data);\r\n            setCart([...cart, ...data])\r\n        } else {\r\n            alert(\"The product has been added to cart.\")\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'))\r\n        if (dataCart) setCart(dataCart)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('dataCart', JSON.stringify(cart))\r\n    }, [carts]);\r\n\r\n\r\n    const value = {\r\n        products: [products, setProducts],\r\n        cart: [carts, setCart],\r\n        addCart: addCart\r\n    };\r\n\r\n\r\n    return (\r\n        <DataContext.Provider value={value}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
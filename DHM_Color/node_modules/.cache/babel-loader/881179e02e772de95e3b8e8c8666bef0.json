{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Du_an20\\\\DuAnTN20\\\\DHM_Color\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiRequest from './api/productApi';\nimport apiRequestPost from './api/postApi';\nimport apiRequestCt from './api/categoryApi';\nimport apiRequestCart from './api/cartApi';\nimport Routers from './routers';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [categorys, setCategorys] = useState([]);\n  const [carts, setCart] = useState([]); //Hien thi danh sach san pham\n  //product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getProducts();\n  }, []); //posts\n\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestPost.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getPost();\n  }, []); //category\n\n  useEffect(() => {\n    const getCategorys = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCt.getAll();\n        setCategorys(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getCategorys();\n  }, []); // cart\n\n  useEffect(() => {\n    const getCart = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCt.getAll();\n        setCart(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getCart();\n  }, []); //productRemove\n\n  const onHandleRemove = async id => {\n    try {\n      const newProducts = products.filter(product => product.id !== id);\n      apiRequest.remove(id);\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n\n      if (confirm) {\n        setProducts(newProducts);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //postRemove\n\n\n  const onHandleRemovePost = async id => {\n    try {\n      const newPosts = posts.filter(post => post.id !== id);\n      apiRequestPost.remove(id);\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n\n      if (confirm) {\n        setPosts(newPosts);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //categoryRemove\n\n\n  const onHandleRemoveCt = async id => {\n    try {\n      const newCategorys = categorys.filter(category => category.id !== id);\n      apiRequestCt.remove(id);\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n\n      if (confirm) {\n        setCategorys(newCategorys);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //productAdd\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm sản phẩm!\");\n\n      if (data, confirmAdd) {\n        setProducts([...products, data]);\n      }\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; //postadd\n\n\n  const onHandleAddP = async post => {\n    try {\n      const {\n        data\n      } = await apiRequestPost.create(post);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm bài viết!\");\n\n      if (data, confirmAdd) {\n        setPosts([...posts, data]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //catgoryAdd\n\n\n  const onHandleAddCt = async category => {\n    try {\n      const {\n        data\n      } = await apiRequestCt.create(category);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm danh mục!\");\n\n      if (data, confirmAdd) {\n        setCategorys([...categorys, data]);\n      }\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdate = async updateProduct => {\n    try {\n      apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers //product\n  , {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate //post\n    ,\n    posts: posts,\n    onRemoveP: onHandleRemovePost,\n    onAddP: onHandleAddP //category\n    ,\n    categorys: categorys,\n    onRemovect: onHandleRemoveCt,\n    onAddCt: onHandleAddCt,\n    cart: true,\n    cart: cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Du_an20/DuAnTN20/DHM_Color/src/App.js"],"names":["React","useState","useEffect","apiRequest","apiRequestPost","apiRequestCt","apiRequestCart","Routers","App","products","setProducts","posts","setPosts","categorys","setCategorys","carts","setCart","getProducts","data","getAll","error","console","log","getPost","getCategorys","getCart","onHandleRemove","id","newProducts","filter","product","remove","confirm","window","onHandleRemovePost","newPosts","post","onHandleRemoveCt","newCategorys","category","onHandleAdd","create","confirmAdd","onHandleAddP","onHandleAddCt","onHandleUpdate","updateProduct","update","map","cart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiRequest from './api/productApi';\nimport apiRequestPost from './api/postApi';\nimport apiRequestCt from './api/categoryApi';\nimport apiRequestCart from './api/cartApi';\nimport Routers from './routers'\n\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [categorys, setCategorys] = useState([]);\n  const [carts, setCart] = useState([]);\n\n  //Hien thi danh sach san pham\n  //product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getProducts();\n  }, []);\n\n  //posts\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const { data } = await apiRequestPost.getAll();\n        setPosts(data);\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getPost();\n  }, [])\n  //category\n\n  useEffect(() => {\n    const getCategorys = async () => {\n      try {\n        const { data } = await apiRequestCt.getAll();\n        setCategorys(data)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getCategorys()\n  }, [])\n  // cart\n  useEffect(() => {\n    const getCart = async () => {\n      try {\n        const { data } = await apiRequestCt.getAll();\n        setCart(data)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getCart()\n  }, [])\n\n\n  //productRemove\n  const onHandleRemove = async (id) => {\n    try {\n      const newProducts = products.filter(product => product.id !== id);\n      apiRequest.remove(id);\n\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n      if (confirm) {\n        setProducts(newProducts);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  //postRemove\n  const onHandleRemovePost = async (id) => {\n    try {\n      const newPosts = posts.filter(post => post.id !== id);\n      apiRequestPost.remove(id);\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n      if (confirm) {\n        setPosts(newPosts);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  //categoryRemove\n  const onHandleRemoveCt = async (id) => {\n    try {\n      const newCategorys = categorys.filter(category => category.id !== id);\n      apiRequestCt.remove(id);\n\n      const confirm = window.confirm(\"Bạn có muốn xóa ?\");\n      if (confirm) {\n        setCategorys(newCategorys);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  //productAdd\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm sản phẩm!\");\n      if (data, confirmAdd) {\n        setProducts([...products, data]);\n      }\n\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n  //postadd\n\n  const onHandleAddP = async (post) => {\n    try {\n      const { data } = await apiRequestPost.create(post);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm bài viết!\");\n      if (data, confirmAdd) {\n        setPosts([...posts, data]);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  //catgoryAdd\n\n  const onHandleAddCt = async (category) => {\n    try {\n      const { data } = await apiRequestCt.create(category);\n      const confirmAdd = window.confirm(\"Bạn có muốn thêm danh mục!\");\n      if (data, confirmAdd) {\n        setCategorys([...categorys, data]);\n      }\n\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n\n  const onHandleUpdate = async (updateProduct) => {\n    try {\n      apiRequest.update(updateProduct.id, updateProduct);\n      const newProducts = products.map(product => (\n        product.id === updateProduct.id ? updateProduct : product\n      ));\n\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Routers\n        //product\n        products={products}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onUpdate={onHandleUpdate}\n        //post\n        posts={posts}\n        onRemoveP={onHandleRemovePost}\n        onAddP={onHandleAddP}\n        //category\n        categorys={categorys}\n        onRemovect={onHandleRemoveCt}\n        onAddCt={onHandleAddCt}\n        cart\n        cart={cart}\n\n      />\n\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}